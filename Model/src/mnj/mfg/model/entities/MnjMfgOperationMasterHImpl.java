package mnj.mfg.model.entities;

import java.sql.SQLException;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jdbc.OracleTypes;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Aug 09 10:38:55 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgOperationMasterHImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        SaleOrderId {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getSaleOrderId();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setSaleOrderId((Number)value);
            }
        }
        ,
        SaleOrderLineId {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getSaleOrderLineId();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setSaleOrderLineId((Number)value);
            }
        }
        ,
        InventoryItemId {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getInventoryItemId();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setInventoryItemId((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getOrgId();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUdatedBy {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getLastUdatedBy();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setLastUdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        EffectiveStartDate {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getEffectiveStartDate();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setEffectiveStartDate((Date)value);
            }
        }
        ,
        EffectiveEndDate {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getEffectiveEndDate();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setEffectiveEndDate((Date)value);
            }
        }
        ,
        HeaderNo {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getHeaderNo();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setHeaderNo((String)value);
            }
        }
        ,
        StnNo {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getStnNo();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setStnNo((String)value);
            }
        }
        ,
        StyleNo {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getStyleNo();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setStyleNo((String)value);
            }
        }
        ,
        StyleName {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getStyleName();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setStyleName((String)value);
            }
        }
        ,
        Brand {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getBrand();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setBrand((String)value);
            }
        }
        ,
        Devision {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getDevision();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setDevision((String)value);
            }
        }
        ,
        Season {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getSeason();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Buyer {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getBuyer();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setBuyer((String)value);
            }
        }
        ,
        WashName {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getWashName();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setWashName((String)value);
            }
        }
        ,
        ColorName {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getColorName();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setColorName((String)value);
            }
        }
        ,
        FabricType {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getFabricType();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setFabricType((String)value);
            }
        }
        ,
        CustomerId {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getCustomerId();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setCustomerId((Number)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        PocId {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getPocId();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setPocId((Number)value);
            }
        }
        ,
        MnjMfgOperationMasterL {
            public Object get(MnjMfgOperationMasterHImpl obj) {
                return obj.getMnjMfgOperationMasterL();
            }

            public void put(MnjMfgOperationMasterHImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgOperationMasterHImpl object);

        public abstract void put(MnjMfgOperationMasterHImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int SALEORDERID = AttributesEnum.SaleOrderId.index();
    public static final int SALEORDERLINEID = AttributesEnum.SaleOrderLineId.index();
    public static final int INVENTORYITEMID = AttributesEnum.InventoryItemId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUDATEDBY = AttributesEnum.LastUdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int HEADERNO = AttributesEnum.HeaderNo.index();
    public static final int STNNO = AttributesEnum.StnNo.index();
    public static final int STYLENO = AttributesEnum.StyleNo.index();
    public static final int STYLENAME = AttributesEnum.StyleName.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int DEVISION = AttributesEnum.Devision.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int BUYER = AttributesEnum.Buyer.index();
    public static final int WASHNAME = AttributesEnum.WashName.index();
    public static final int COLORNAME = AttributesEnum.ColorName.index();
    public static final int FABRICTYPE = AttributesEnum.FabricType.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int POCID = AttributesEnum.PocId.index();
    public static final int MNJMFGOPERATIONMASTERL = AttributesEnum.MnjMfgOperationMasterL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgOperationMasterHImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgOperationMasterH");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for SaleOrderId, using the alias name SaleOrderId.
     * @return the SaleOrderId
     */
    public Number getSaleOrderId() {
        return (Number)getAttributeInternal(SALEORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleOrderId.
     * @param value value to set the SaleOrderId
     */
    public void setSaleOrderId(Number value) {
        setAttributeInternal(SALEORDERID, value);
    }

    /**
     * Gets the attribute value for SaleOrderLineId, using the alias name SaleOrderLineId.
     * @return the SaleOrderLineId
     */
    public Number getSaleOrderLineId() {
        return (Number)getAttributeInternal(SALEORDERLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleOrderLineId.
     * @param value value to set the SaleOrderLineId
     */
    public void setSaleOrderLineId(Number value) {
        setAttributeInternal(SALEORDERLINEID, value);
    }

    /**
     * Gets the attribute value for InventoryItemId, using the alias name InventoryItemId.
     * @return the InventoryItemId
     */
    public Number getInventoryItemId() {
        return (Number)getAttributeInternal(INVENTORYITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InventoryItemId.
     * @param value value to set the InventoryItemId
     */
    public void setInventoryItemId(Number value) {
        setAttributeInternal(INVENTORYITEMID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUdatedBy, using the alias name LastUdatedBy.
     * @return the LastUdatedBy
     */
    public Number getLastUdatedBy() {
        return (Number)getAttributeInternal(LASTUDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUdatedBy.
     * @param value value to set the LastUdatedBy
     */
    public void setLastUdatedBy(Number value) {
        setAttributeInternal(LASTUDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate.
     * @return the EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date)getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveStartDate.
     * @param value value to set the EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate.
     * @return the EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date)getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveEndDate.
     * @param value value to set the EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for HeaderNo, using the alias name HeaderNo.
     * @return the HeaderNo
     */
    public String getHeaderNo() {
        return (String)getAttributeInternal(HEADERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderNo.
     * @param value value to set the HeaderNo
     */
    public void setHeaderNo(String value) {
        setAttributeInternal(HEADERNO, value);
    }

    /**
     * Gets the attribute value for StnNo, using the alias name StnNo.
     * @return the StnNo
     */
    public String getStnNo() {
        return (String)getAttributeInternal(STNNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for StnNo.
     * @param value value to set the StnNo
     */
    public void setStnNo(String value) {
        setAttributeInternal(STNNO, value);
    }

    /**
     * Gets the attribute value for StyleNo, using the alias name StyleNo.
     * @return the StyleNo
     */
    public String getStyleNo() {
        return (String)getAttributeInternal(STYLENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleNo.
     * @param value value to set the StyleNo
     */
    public void setStyleNo(String value) {
        setAttributeInternal(STYLENO, value);
    }

    /**
     * Gets the attribute value for StyleName, using the alias name StyleName.
     * @return the StyleName
     */
    public String getStyleName() {
        return (String)getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleName.
     * @param value value to set the StyleName
     */
    public void setStyleName(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for Brand, using the alias name Brand.
     * @return the Brand
     */
    public String getBrand() {
        return (String)getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for Brand.
     * @param value value to set the Brand
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }

    /**
     * Gets the attribute value for Devision, using the alias name Devision.
     * @return the Devision
     */
    public String getDevision() {
        return (String)getAttributeInternal(DEVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Devision.
     * @param value value to set the Devision
     */
    public void setDevision(String value) {
        setAttributeInternal(DEVISION, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for Buyer, using the alias name Buyer.
     * @return the Buyer
     */
    public String getBuyer() {
        return (String)getAttributeInternal(BUYER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Buyer.
     * @param value value to set the Buyer
     */
    public void setBuyer(String value) {
        setAttributeInternal(BUYER, value);
    }

    /**
     * Gets the attribute value for WashName, using the alias name WashName.
     * @return the WashName
     */
    public String getWashName() {
        return (String)getAttributeInternal(WASHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for WashName.
     * @param value value to set the WashName
     */
    public void setWashName(String value) {
        setAttributeInternal(WASHNAME, value);
    }

    /**
     * Gets the attribute value for ColorName, using the alias name ColorName.
     * @return the ColorName
     */
    public String getColorName() {
        return (String)getAttributeInternal(COLORNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ColorName.
     * @param value value to set the ColorName
     */
    public void setColorName(String value) {
        setAttributeInternal(COLORNAME, value);
    }

    /**
     * Gets the attribute value for FabricType, using the alias name FabricType.
     * @return the FabricType
     */
    public String getFabricType() {
        return (String)getAttributeInternal(FABRICTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FabricType.
     * @param value value to set the FabricType
     */
    public void setFabricType(String value) {
        setAttributeInternal(FABRICTYPE, value);
    }

    /**
     * Gets the attribute value for CustomerId, using the alias name CustomerId.
     * @return the CustomerId
     */
    public Number getCustomerId() {
        return (Number)getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerId.
     * @param value value to set the CustomerId
     */
    public void setCustomerId(Number value) {
        setAttributeInternal(CUSTOMERID, value);
    }


    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for PocId, using the alias name PocId.
     * @return the PocId
     */
    public Number getPocId() {
        return (Number)getAttributeInternal(POCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PocId.
     * @param value value to set the PocId
     */
    public void setPocId(Number value) {
        setAttributeInternal(POCID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgOperationMasterL() {
        return (RowIterator)getAttributeInternal(MNJMFGOPERATIONMASTERL);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_OPERATION_MASTER_H_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeaderId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
     public void remove() {
         ViewObject vo = getDBTransaction().createViewObjectFromQueryStmt("select count(1) from MNJ_MFG_OPERATION_MASTER_L h where h.header_id ="+getHeaderId());
         vo.first();
         int count = 0 ;
         try{
           count  =  Integer.parseInt(vo.getCurrentRow().getAttribute(0).toString());
         }catch(Exception e){
             vo.remove();
         }
         if(count == 0 ){
             super.remove();    
         }else
         {
          String messageText="please Delete operations First";
            FacesMessage fm = new FacesMessage(messageText);          
            fm.setSeverity(FacesMessage.SEVERITY_INFO);
            FacesContext context = FacesContext.getCurrentInstance();
            context.addMessage(null, fm);
             
         }//end of else
         vo.remove();
     }


    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }
    

    public String getSrNoString() {
          String srno = "XXXX";
          String stmt = "BEGIN :1 := mnj_mfg_doc_no_pkg.cust_mnj_operation_master; end;";
          java.sql.CallableStatement cs =   getDBTransaction().createCallableStatement(stmt, 1);
          try {
              cs.registerOutParameter(1, OracleTypes.CHAR);
              cs.execute();
              srno = cs.getString(1);
              cs.close();
          } catch (Exception e) {
              e.printStackTrace();
          }
          return srno;
      } 


    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
     protected void doDML(int operation, TransactionEvent e) {
           Map sessionScope = ADFContext.getCurrent().getSessionScope();   
           String user = (String)sessionScope.get("userId");
           String orgId  =(String)sessionScope.get("orgId");
           String unitName  =(String)sessionScope.get("unitName");
          
           System.out.println("ASSES INS DO DML 1 ------------------>"+user);
           System.out.println("ASSES INS DO DML 2------------------>"+orgId);
           System.out.println("ASSES INS DML 3 ------------------>"+unitName);
           
           if(DML_UPDATE == operation){
                     try {
                         setLastUpdatedDate((Date)Date.getCurrentDate()); 
                         setLastUdatedBy(new oracle.jbo.domain.Number(user));
                     } catch (SQLException f) {
                         System.out.println(f.getMessage());
                     }
                 }
                 else if (DML_INSERT == operation){
                  
                     try {
                         setHeaderNo(getSrNoString());
                         setOrgId(new oracle.jbo.domain.Number(orgId));
                         setFabricType(unitName);
                         setCreationDate((Date)Date.getCurrentDate());  
                         setCreatedBy(new oracle.jbo.domain.Number(user));
                        
                        
                        
                     } catch (SQLException f) {
                         ;
                     }
                 } 
           
           super.doDML(operation, e);
       }

}
