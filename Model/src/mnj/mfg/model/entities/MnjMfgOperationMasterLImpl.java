package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.jbo.AttributeList;
import javax.faces.application.FacesMessage;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Aug 09 10:40:23 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgOperationMasterLImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        DeptId {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getDeptId();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setDeptId((Number)value);
            }
        }
        ,
        DeptName {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getDeptName();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setDeptName((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUdatedBy {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getLastUdatedBy();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setLastUdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        EffectiveStartDate {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getEffectiveStartDate();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setEffectiveStartDate((Date)value);
            }
        }
        ,
        EffectiveEndDate {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getEffectiveEndDate();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setEffectiveEndDate((Date)value);
            }
        }
        ,
        DeptNo {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getDeptNo();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setDeptNo((String)value);
            }
        }
        ,
        TardetProduction {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getTardetProduction();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setTardetProduction((Number)value);
            }
        }
        ,
        OptionNo {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getOptionNo();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setOptionNo((String)value);
            }
        }
        ,
        VersionNo {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getVersionNo();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setVersionNo((String)value);
            }
        }
        ,
        TotalSamValue {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getTotalSamValue();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setTotalSamValue((Number)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        MnjMfgOperationMasterH {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getMnjMfgOperationMasterH();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setMnjMfgOperationMasterH((MnjMfgOperationMasterHImpl)value);
            }
        }
        ,
        DeatilsEO {
            public Object get(MnjMfgOperationMasterLImpl obj) {
                return obj.getDeatilsEO();
            }

            public void put(MnjMfgOperationMasterLImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgOperationMasterLImpl object);

        public abstract void put(MnjMfgOperationMasterLImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int DEPTID = AttributesEnum.DeptId.index();
    public static final int DEPTNAME = AttributesEnum.DeptName.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUDATEDBY = AttributesEnum.LastUdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int DEPTNO = AttributesEnum.DeptNo.index();
    public static final int TARDETPRODUCTION = AttributesEnum.TardetProduction.index();
    public static final int OPTIONNO = AttributesEnum.OptionNo.index();
    public static final int VERSIONNO = AttributesEnum.VersionNo.index();
    public static final int TOTALSAMVALUE = AttributesEnum.TotalSamValue.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int MNJMFGOPERATIONMASTERH = AttributesEnum.MnjMfgOperationMasterH.index();
    public static final int DEATILSEO = AttributesEnum.DeatilsEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgOperationMasterLImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgOperationMasterL");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for DeptId, using the alias name DeptId.
     * @return the DeptId
     */
    public Number getDeptId() {
        return (Number)getAttributeInternal(DEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeptId.
     * @param value value to set the DeptId
     */
    public void setDeptId(Number value) {
        setAttributeInternal(DEPTID, value);
    }

    /**
     * Gets the attribute value for DeptName, using the alias name DeptName.
     * @return the DeptName
     */
    public String getDeptName() {
        return (String)getAttributeInternal(DEPTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeptName.
     * @param value value to set the DeptName
     */
    public void setDeptName(String value) {
        setAttributeInternal(DEPTNAME, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUdatedBy, using the alias name LastUdatedBy.
     * @return the LastUdatedBy
     */
    public Number getLastUdatedBy() {
        return (Number)getAttributeInternal(LASTUDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUdatedBy.
     * @param value value to set the LastUdatedBy
     */
    public void setLastUdatedBy(Number value) {
        setAttributeInternal(LASTUDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate.
     * @return the EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date)getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveStartDate.
     * @param value value to set the EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate.
     * @return the EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date)getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveEndDate.
     * @param value value to set the EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for DeptNo, using the alias name DeptNo.
     * @return the DeptNo
     */
    public String getDeptNo() {
        return (String)getAttributeInternal(DEPTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeptNo.
     * @param value value to set the DeptNo
     */
    public void setDeptNo(String value) {
        setAttributeInternal(DEPTNO, value);
    }

    /**
     * Gets the attribute value for TardetProduction, using the alias name TardetProduction.
     * @return the TardetProduction
     */
    public Number getTardetProduction() {
        return (Number)getAttributeInternal(TARDETPRODUCTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for TardetProduction.
     * @param value value to set the TardetProduction
     */
    public void setTardetProduction(Number value) {
        setAttributeInternal(TARDETPRODUCTION, value);
    }

    /**
     * Gets the attribute value for OptionNo, using the alias name OptionNo.
     * @return the OptionNo
     */
    public String getOptionNo() {
        return (String)getAttributeInternal(OPTIONNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OptionNo.
     * @param value value to set the OptionNo
     */
    public void setOptionNo(String value) {
        setAttributeInternal(OPTIONNO, value);
    }

    /**
     * Gets the attribute value for VersionNo, using the alias name VersionNo.
     * @return the VersionNo
     */
    public String getVersionNo() {
        return (String)getAttributeInternal(VERSIONNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for VersionNo.
     * @param value value to set the VersionNo
     */
    public void setVersionNo(String value) {
        setAttributeInternal(VERSIONNO, value);
    }

    /**
     * Gets the attribute value for TotalSamValue, using the alias name TotalSamValue.
     * @return the TotalSamValue
     */
    public Number getTotalSamValue() {
        return (Number)getAttributeInternal(TOTALSAMVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalSamValue.
     * @param value value to set the TotalSamValue
     */
    public void setTotalSamValue(Number value) {
        setAttributeInternal(TOTALSAMVALUE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MnjMfgOperationMasterHImpl.
     */
    public MnjMfgOperationMasterHImpl getMnjMfgOperationMasterH() {
        return (MnjMfgOperationMasterHImpl)getAttributeInternal(MNJMFGOPERATIONMASTERH);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgOperationMasterHImpl.
     */
    public void setMnjMfgOperationMasterH(MnjMfgOperationMasterHImpl value) {
        setAttributeInternal(MNJMFGOPERATIONMASTERH, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDeatilsEO() {
        return (RowIterator)getAttributeInternal(DEATILSEO);
    }


    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_OPERATION_MASTER_L_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setLineId(sVal);
        
        setCreationDate((Date)Date.getCurrentDate()); 
        Map sessionScope = ADFContext.getCurrent().getSessionScope();   
        String var = (String)sessionScope.get("userId");
        System.out.println("Session user Id = "+ var);
        try {
            setCreatedBy(new oracle.jbo.domain.Number(var));
        } catch (SQLException e) {
            ;
        }
    }

    /**
     * Add entity remove logic in this method.
     */
     public void remove() {
         ViewObject vo = getDBTransaction().createViewObjectFromQueryStmt("select count(1) from MNJ_MFG_OPERATION_MASTER_D h where h.line_id ="+getLineId());
         vo.first();
         int count = 0 ;
         try{
           count  =  Integer.parseInt(vo.getCurrentRow().getAttribute(0).toString());
         }catch(Exception e){
             vo.remove();
         }
         if(count == 0 ){
             super.remove();    
         }else
         {
          String messageText="please Delete operations First";
            FacesMessage fm = new FacesMessage(messageText);          
            fm.setSeverity(FacesMessage.SEVERITY_INFO);
            FacesContext context = FacesContext.getCurrentInstance();
            context.addMessage(null, fm);
             
         }//end of else
         vo.remove();
     }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String user =null ;
        try {   
            Map sessionScope = ADFContext.getCurrent().getSessionScope();   
            user = (String)sessionScope.get("userId");
            
        }catch(Exception ee) {
              ;  
        }
        if(DML_UPDATE == operation){
            try {
                setLastUpdatedDate((Date)Date.getCurrentDate()); 
                setLastUdatedBy(new oracle.jbo.domain.Number(user));
               
            } catch (SQLException f) {
                System.out.println(f.getMessage());
            }
        }
        super.doDML(operation, e);
    }
}
