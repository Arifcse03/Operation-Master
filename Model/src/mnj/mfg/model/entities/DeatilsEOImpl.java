package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 07 12:56:13 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DeatilsEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_OPERATION_MASTER_D_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setDetailId(sVal);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DetailId {
            public Object get(DeatilsEOImpl obj) {
                return obj.getDetailId();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setDetailId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(DeatilsEOImpl obj) {
                return obj.getLineId();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        MinorOperation {
            public Object get(DeatilsEOImpl obj) {
                return obj.getMinorOperation();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setMinorOperation((String)value);
            }
        }
        ,
        MajorOpId {
            public Object get(DeatilsEOImpl obj) {
                return obj.getMajorOpId();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setMajorOpId((Number)value);
            }
        }
        ,
        Smv {
            public Object get(DeatilsEOImpl obj) {
                return obj.getSmv();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setSmv((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(DeatilsEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUdatedBy {
            public Object get(DeatilsEOImpl obj) {
                return obj.getLastUdatedBy();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setLastUdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(DeatilsEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        EffectiveStartDate {
            public Object get(DeatilsEOImpl obj) {
                return obj.getEffectiveStartDate();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setEffectiveStartDate((Date)value);
            }
        }
        ,
        EffectiveEndDate {
            public Object get(DeatilsEOImpl obj) {
                return obj.getEffectiveEndDate();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setEffectiveEndDate((Date)value);
            }
        }
        ,
        OperationCode {
            public Object get(DeatilsEOImpl obj) {
                return obj.getOperationCode();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setOperationCode((String)value);
            }
        }
        ,
        MajorOperation {
            public Object get(DeatilsEOImpl obj) {
                return obj.getMajorOperation();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setMajorOperation((String)value);
            }
        }
        ,
        MachineType {
            public Object get(DeatilsEOImpl obj) {
                return obj.getMachineType();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setMachineType((String)value);
            }
        }
        ,
        MnjMfgOperationMasterL {
            public Object get(DeatilsEOImpl obj) {
                return obj.getMnjMfgOperationMasterL();
            }

            public void put(DeatilsEOImpl obj, Object value) {
                obj.setMnjMfgOperationMasterL((MnjMfgOperationMasterLImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DeatilsEOImpl object);

        public abstract void put(DeatilsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DETAILID = AttributesEnum.DetailId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int MINOROPERATION = AttributesEnum.MinorOperation.index();
    public static final int MAJOROPID = AttributesEnum.MajorOpId.index();
    public static final int SMV = AttributesEnum.Smv.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUDATEDBY = AttributesEnum.LastUdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int OPERATIONCODE = AttributesEnum.OperationCode.index();
    public static final int MAJOROPERATION = AttributesEnum.MajorOperation.index();
    public static final int MACHINETYPE = AttributesEnum.MachineType.index();
    public static final int MNJMFGOPERATIONMASTERL = AttributesEnum.MnjMfgOperationMasterL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DeatilsEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.DeatilsEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DetailId, using the alias name DetailId.
     * @return the DetailId
     */
    public Number getDetailId() {
        return (Number)getAttributeInternal(DETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailId.
     * @param value value to set the DetailId
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for MinorOperation, using the alias name MinorOperation.
     * @return the MinorOperation
     */
    public String getMinorOperation() {
        return (String)getAttributeInternal(MINOROPERATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinorOperation.
     * @param value value to set the MinorOperation
     */
    public void setMinorOperation(String value) {
        setAttributeInternal(MINOROPERATION, value);
    }

    /**
     * Gets the attribute value for MajorOpId, using the alias name MajorOpId.
     * @return the MajorOpId
     */
    public Number getMajorOpId() {
        return (Number)getAttributeInternal(MAJOROPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MajorOpId.
     * @param value value to set the MajorOpId
     */
    public void setMajorOpId(Number value) {
        setAttributeInternal(MAJOROPID, value);
    }

    /**
     * Gets the attribute value for Smv, using the alias name Smv.
     * @return the Smv
     */
    public Number getSmv() {
        return (Number)getAttributeInternal(SMV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Smv.
     * @param value value to set the Smv
     */
    public void setSmv(Number value) {
        setAttributeInternal(SMV, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUdatedBy, using the alias name LastUdatedBy.
     * @return the LastUdatedBy
     */
    public Number getLastUdatedBy() {
        return (Number)getAttributeInternal(LASTUDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUdatedBy.
     * @param value value to set the LastUdatedBy
     */
    public void setLastUdatedBy(Number value) {
        setAttributeInternal(LASTUDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate.
     * @return the EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date)getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveStartDate.
     * @param value value to set the EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate.
     * @return the EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date)getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveEndDate.
     * @param value value to set the EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for OperationCode, using the alias name OperationCode.
     * @return the OperationCode
     */
    public String getOperationCode() {
        return (String)getAttributeInternal(OPERATIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperationCode.
     * @param value value to set the OperationCode
     */
    public void setOperationCode(String value) {
        setAttributeInternal(OPERATIONCODE, value);
    }

    /**
     * Gets the attribute value for MajorOperation, using the alias name MajorOperation.
     * @return the MajorOperation
     */
    public String getMajorOperation() {
        return (String)getAttributeInternal(MAJOROPERATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for MajorOperation.
     * @param value value to set the MajorOperation
     */
    public void setMajorOperation(String value) {
        setAttributeInternal(MAJOROPERATION, value);
    }

    /**
     * Gets the attribute value for MachineType, using the alias name MachineType.
     * @return the MachineType
     */
    public String getMachineType() {
        return (String)getAttributeInternal(MACHINETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MachineType.
     * @param value value to set the MachineType
     */
    public void setMachineType(String value) {
        setAttributeInternal(MACHINETYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public MnjMfgOperationMasterLImpl getMnjMfgOperationMasterL() {
        return (MnjMfgOperationMasterLImpl)getAttributeInternal(MNJMFGOPERATIONMASTERL);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setMnjMfgOperationMasterL(MnjMfgOperationMasterLImpl value) {
        setAttributeInternal(MNJMFGOPERATIONMASTERL, value);
    }

    /**
     * @param detailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number detailId) {
        return new Key(new Object[]{detailId});
    }


}
